name: Lint and Format

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  lint-and-format:
    name: Lint and Format Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        id: eslint
        run: |
          echo "Running ESLint..."
          npm run lint 2>&1 | tee eslint-output.txt
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "eslint_failed=true" >> $GITHUB_OUTPUT
            exit 1
          fi
        continue-on-error: true

      - name: Run Prettier Check
        id: prettier
        run: |
          echo "Running Prettier check..."
          npm run format:check 2>&1 | tee prettier-output.txt
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "prettier_failed=true" >> $GITHUB_OUTPUT
            exit 1
          fi
        continue-on-error: true

      - name: Create annotations for ESLint issues
        if: steps.eslint.outputs.eslint_failed == 'true'
        run: |
          echo "::error title=ESLint Issues Found::ESLint found issues in your code. Run 'npm run lint:fix' to automatically fix some of these issues."
          if [ -f eslint-output.txt ]; then
            echo "::group::ESLint Output"
            cat eslint-output.txt
            echo "::endgroup::"
          fi

      - name: Create annotations for Prettier issues
        if: steps.prettier.outputs.prettier_failed == 'true'
        run: |
          echo "::error title=Prettier Issues Found::Prettier found formatting issues in your code. Run 'npm run format' to automatically fix these formatting issues."
          if [ -f prettier-output.txt ]; then
            echo "::group::Prettier Output"
            cat prettier-output.txt
            echo "::endgroup::"
          fi

      - name: Add PR comment with fix suggestions
        if: (steps.eslint.outputs.eslint_failed == 'true' || steps.prettier.outputs.prettier_failed == 'true') && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const eslintFailed = '${{ steps.eslint.outputs.eslint_failed }}' === 'true';
            const prettierFailed = '${{ steps.prettier.outputs.prettier_failed }}' === 'true';
            
            let comment = '## 🚨 Code Quality Issues Found\n\n';
            
            if (eslintFailed) {
              comment += '### ESLint Issues\n';
              comment += 'ESLint found issues in your code. To fix them automatically, run:\n';
              comment += '```bash\nnpm run lint:fix\n```\n\n';
            }
            
            if (prettierFailed) {
              comment += '### Prettier Issues\n';
              comment += 'Prettier found formatting issues. To fix them automatically, run:\n';
              comment += '```bash\nnpm run format\n```\n\n';
            }
            
            comment += '### Quick Fix (Run both commands)\n';
            comment += '```bash\nnpm run lint:fix && npm run format\n```\n\n';
            comment += 'After running these commands, commit and push your changes to update this PR.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Generate summary
        if: always()
        run: |
          echo "# Lint and Format Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.eslint.outputs.eslint_failed }}" = "true" ]; then
            echo "❌ **ESLint**: Issues found" >> $GITHUB_STEP_SUMMARY
            echo "- Run \`npm run lint:fix\` to auto-fix issues" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **ESLint**: No issues found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.prettier.outputs.prettier_failed }}" = "true" ]; then
            echo "❌ **Prettier**: Formatting issues found" >> $GITHUB_STEP_SUMMARY
            echo "- Run \`npm run format\` to auto-fix formatting" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Prettier**: No formatting issues" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Quick Commands" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Fix linting issues" >> $GITHUB_STEP_SUMMARY
          echo "npm run lint:fix" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Fix formatting issues" >> $GITHUB_STEP_SUMMARY
          echo "npm run format" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Fix both at once" >> $GITHUB_STEP_SUMMARY
          echo "npm run lint:fix && npm run format" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Fail workflow if issues found
        if: steps.eslint.outputs.eslint_failed == 'true' || steps.prettier.outputs.prettier_failed == 'true'
        run: |
          echo "::error::Code quality checks failed. Please fix the issues and try again."
          exit 1